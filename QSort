//快速排序
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
void QSort(int A[], int p ,int r);
int Partition(int A[], int p ,int r);

int main()          //给出测试用例
{
    int i , j;
    int A[]={49,38,65,97,76,13,27,102};
    //输出原始数组
    printf("Initial Array:\n");
    for(j=0;j<(sizeof(A)/sizeof(int));j++)
    {
        printf("%d\t",A[j]);
    }
    printf("\n");
    //进行快速排序
    QSort(A, 0, 7);
    //输出QSort后的数组
    printf("The Sorted Array :\n");
    for(i=0;i<(sizeof(A)/sizeof(int));i++)
    {
        printf("%d\t",A[i]);
        
    }
    printf("\n");
    return 0 ;
}

void QSort(int A[], int p ,int r)   //递归进行快速排序
{
    int q ;
    if(p<r)
    {
        q=Partition(A, p, r);
        QSort(A, p, q-1);
        QSort(A, q+1, r);
    }
}

int Partition(int A[], int p ,int r)    //数组的划分
{
    int x , i , j , temp , c;
    x = A[r];   //设置pivot
    i = p-1;
    for(j=p;j<=r-1;j++)
    {
        if(A[j]<=x)
        {
            i=i+1;
            temp = A[j];  //A[j]与A[i]的元素进行互换
            A[j] = A[i];
            A[i] = temp;
        }
    }
    c = A[r];
    A[r] = A[i+1];
    A[i+1] = c;
    return (i+1);
}
